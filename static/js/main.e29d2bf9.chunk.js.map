{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","reportWebVitals.ts","redux/profilePageReducer.tsx","redux/dialogPageReducer.tsx","redux/state.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","profilePageReducer","state","action","type","newPost","id","message","newPostText","like","posts","push","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogPageReducer","newMessageBody","body","messages","store","_state","profilePage","dialogsPage","dialogs","name","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","Header","className","s","header","src","alt","Navbar","nav","item","activeClassName","activeLink","to","Post","props","MyPosts","postsUsers","map","postUser","newPostElement","React","createRef","postsBlock","ref","value","onChange","current","text","updateNewPostTextActionCreated","onClick","ProfileInfo","discription","Profile","DialogItem","dialog","active","Message","Dialogs","dialogsUsers","users","messageElements","dialogsItems","sendMessage","event","target","placeholder","News","Music","Settings","App","path","render","renderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.e29d2bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__nY4i3\",\"posts\":\"MyPosts_posts__1gt4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25iZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2eAep\",\"item\":\"Post_item__1JGZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discription\":\"ProfileInfo_discription__Ow1Zq\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsType, AddPostActionType, ProfilePageType, UpdateNewPostTextActionType} from \"./state\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nconst profilePageReducer = (state: ProfilePageType, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {id: 2, message: action.newPostText, like: 0}\r\n            state.posts.push(newPost);\r\n            state.newPostText = '';\r\n            break;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n            break;\r\n    }\r\n    return state;\r\n}\r\nexport const addPostActionCreated = (newPostText: string): AddPostActionType =>\r\n    ({\r\n        type: ADD_POST,\r\n        newPostText: newPostText\r\n    })\r\nexport const updateNewPostTextActionCreated = (text: string): UpdateNewPostTextActionType =>\r\n    ({\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    })\r\nexport default profilePageReducer;","import {ActionsType, DialogsPageType, SendMessageActionType, UpdateNewMessageActionBodyType} from \"./state\";\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nconst dialogPageReducer = (state: DialogsPageType, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body;\r\n            break;\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            state.newMessageBody = '';\r\n            state.messages.push({id: 5, message: body});\r\n            break;\r\n    }\r\n    return state;\r\n}\r\nexport const updateNewMessageBodyCreated = (text: string): UpdateNewMessageActionBodyType =>\r\n    ({\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: text\r\n    })\r\nexport const sendMessageCreated = (): SendMessageActionType =>\r\n    ({\r\n        type: SEND_MESSAGE\r\n    })\r\nexport default dialogPageReducer;","import React from \"react\";\r\nimport profilePageReducer from \"./profilePageReducer\";\r\nimport dialogPageReducer from \"./dialogPageReducer\";\r\n\r\ntype Posts = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<Posts>\r\n    newPostText: string\r\n\r\n}\r\ntype Dialogs = {\r\n    name: string\r\n    id: number\r\n}\r\ntype Messages = {\r\n    message: string\r\n    id: number\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: Array<Dialogs>\r\n    messages: Array<Messages>\r\n    newMessageBody: string\r\n}\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST'\r\n    newPostText: string\r\n}\r\nexport type UpdateNewPostTextActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type UpdateNewMessageActionBodyType = {\r\n    type: 'UPDATE-NEW-MESSAGE-BODY'\r\n    body: string\r\n}\r\nexport type SendMessageActionType = {\r\n    type: 'SEND_MESSAGE'\r\n}\r\nexport type ActionsType =\r\n    AddPostActionType\r\n    | UpdateNewPostTextActionType\r\n    | UpdateNewMessageActionBodyType\r\n    | SendMessageActionType\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _callSubscriber: () => void\r\n    getState: () => StateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsType) => void\r\n}\r\n\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hello bro!', like: 10},\r\n            ],\r\n            newPostText: '',\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Marina'},\r\n                {id: 2, name: 'Sergey'},\r\n                {id: 3, name: 'Lyubov'},\r\n                {id: 4, name: 'Brus'}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hello!!'},\r\n                {id: 2, message: 'Hav are you?'},\r\n                {id: 3, message: 'Good by!'},\r\n                {id: 4, message: 'i`am Lox))'}\r\n            ],\r\n            newMessageBody: ''\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('HELLO');\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer: () => void) {\r\n        this._callSubscriber = observer;\r\n    },\r\n    dispatch(action: ActionsType) {\r\n        this._state.profilePage = profilePageReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogPageReducer(this._state.dialogsPage, action);\r\n        this._callSubscriber();\r\n    }\r\n}\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTi-1Y2DFhk_Et3RojjMJ4pwLu8-IQQnUjvWw&usqp=CAU'}\r\n                alt=\"images\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to={\"/profile\"}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to={\"/dialogs\"}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to={\"/news\"}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to={\"/music\"}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.activeLink} to={\"/settings\"}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PropsPostType = {\r\n    message: string\r\n    like: number\r\n}\r\n\r\nexport const Post = (props: PropsPostType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img\r\n                    src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPIr14HmGjMdm0xA17mZ4-g_UrxeyU9T0ANw&usqp=CAU'}\r\n                    alt=\"avatar owner\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>\r\n                       like {props.like}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {addPostActionCreated, updateNewPostTextActionCreated} from \"../../../redux/profilePageReducer\";\r\nimport {ActionsType} from \"../../../redux/state\";\r\n\r\ntype PostsType = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n}\r\ntype PropsMyPosts = {\r\n    posts: Array<PostsType>\r\n    dispatch: (action: ActionsType) => void\r\n    newPostText: string\r\n}\r\n\r\nexport const MyPosts = (props: PropsMyPosts) => {\r\n\r\n    let postsUsers = props.posts.map(postUser => <Post message={postUser.message} like={postUser.like}/>);\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPost = () => props.dispatch(addPostActionCreated(props.newPostText));\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current.value;\r\n            props.dispatch(updateNewPostTextActionCreated(text));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h4>My posts</h4>\r\n            </div>\r\n            <div>\r\n                <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPost}>Add post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsUsers}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={'https://pm1.narvii.com/6754/54232927f53aa2b664d36dfd7348b5edadc6f10c_00.jpg'} alt=\"\"/>\r\n            </div>\r\n            <div className={s.discription}>\r\n                ava + discription\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionsType} from \"../../redux/state\";\r\n\r\ntype PostsType = {\r\n    id:number\r\n    message:string\r\n    like:number\r\n}\r\ntype Posts = {\r\n    posts:Array<PostsType>\r\n}\r\ntype PropsProfileType = {\r\n    profilePage: Posts\r\n    dispatch:(action:ActionsType)=>void\r\n    newPostText:string\r\n}\r\n\r\nexport const Profile = (props: PropsProfileType) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     dispatch={props.dispatch}\r\n                     newPostText={props.newPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsDialogType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItem = (props: PropsDialogType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsMessageType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: PropsMessageType) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {sendMessageCreated, updateNewMessageBodyCreated} from \"../../redux/dialogPageReducer\";\r\nimport {StoreType} from \"../../redux/state\";\r\n\r\ntype PropsDialogsType = {\r\n    store: StoreType\r\n}\r\n\r\nexport const Dialogs = (props: PropsDialogsType) => {\r\n\r\n    let state = props.store.getState().dialogsPage\r\n\r\n    let dialogsUsers = state.dialogs.map(users => <DialogItem name={users.name} id={users.id}/>);\r\n    let messageElements = state.messages.map(messages => <Message message={messages.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    let onSendMessageClick = () => {\r\n        props.store.dispatch(sendMessageCreated());\r\n\r\n    }\r\n    let onNewMessageChange = (event: any) => {\r\n        let body = event.target.value;\r\n        props.store.dispatch(updateNewMessageBodyCreated(body));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsUsers}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messageElements}</div>\r\n                    <div>\r\n                        <div className={s.sendMessage}>\r\n                            <textarea value={newMessageBody} onChange={onNewMessageChange} placeholder='Message'/>\r\n                            <button onClick={onSendMessageClick}>SEND</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\n\r\n\r\n\r\nexport const News = () => {\r\n    return (\r\n      <div>News</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n      <div>Music</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n     <div>Settings</div>\r\n    );\r\n}","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from \"./components/Settings/Settings\";\nimport {ActionsType, StoreType} from \"./redux/state\";\n\ntype PostsType = {\n    id: number\n    message: string\n    like: number\n}\ntype ProfilePageType = {\n    posts: Array<PostsType>\n    newPostText: string\n}\ntype DialogsType = {\n    name: string\n    id: number\n}\ntype MessagesType = {\n    message: string\n}\ntype DialogsPageType = {\n    dialogs: Array<DialogsType>\n    messages: Array<MessagesType>\n}\nexport type StateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n}\ntype PropsAppType = {\n    state: StateType\n    dispatch: (action:ActionsType) => void\n    store:StoreType\n}\n\nconst App = (props: PropsAppType) => {\n    return (\n        <div className={'app-wrapper'}>\n            <Header/>\n            <Navbar/>\n            <div className={'app-wrapper-content'}>\n                <Route path={'/profile'}\n                       render={() => <Profile profilePage={props.state.profilePage}\n                                              dispatch={props.dispatch}\n                                              newPostText={props.state.profilePage.newPostText}\n                       />}/>\n                <Route path={'/dialogs'} render={() => <Dialogs store={props.store} />}/>\n                <Route path={'/news'} render={() => <News/>}/>\n                <Route path={'/music'} render={() => <Music/>}/>\n                <Route path={'/settings'} render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n}\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/state\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nlet renderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <React.StrictMode>\n                <App state={store.getState()}\n                     dispatch={store.dispatch.bind(store)}\n                    store={store}\n                />\n            </React.StrictMode>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nrenderEntireTree();\nstore.subscribe(renderEntireTree);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1tSn_\",\"item\":\"Navbar_item__1SK7_\",\"activeLink\":\"Navbar_activeLink__2bvNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1MURa\",\"dialogsItems\":\"Dialogs_dialogsItems__3263C\",\"active\":\"Dialogs_active__1oYIa\",\"dialog\":\"Dialogs_dialog__E6mIT\",\"messages\":\"Dialogs_messages__2Zutj\",\"message\":\"Dialogs_message__38pdc\",\"sendMessage\":\"Dialogs_sendMessage__24a5M\"};"],"sourceRoot":""}